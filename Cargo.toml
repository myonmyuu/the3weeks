[workspace]
members = ["ssins-webserver", "ssins-frontend", "ssins-shared", "ssins-bind"]
resolver = "2"

[workspace.dependencies]
log = "0.4.27"
serde = { version = "1", features = ["derive"] }
serde_json = "1.0.140"
sqlx = { version = "0.8", features = ["runtime-tokio", "postgres", "chrono", "uuid"] }
argon2 = "0.5.3"
uuid = "1.17.0"
chrono = { version = "0.4.41", features = ["serde"] }

axum = { version = "0.8.4", features = ["macros"] }
axum-extra = { version ="0.10.1", features = ["cookie"] }
axum-core = "0.5.2"
leptos = { version = "0.8.2", features = ["nightly"] }
leptos_router = { version = "0.8.2", features = ["nightly"] }
leptos_axum = "0.8.2"
leptos_meta = { version = "0.8.2" }
leptos-use = { version = "0.16.2", features = ["axum"] }

tokio = { version = "1.46.1", features = ["full"] }
tower = { version = "0.5.2", features = ["full"] }
tower-http = { version = "0.6.4", features = ["full"] }
wasm-bindgen = "=0.2.100"

cookie = { version = "0.18", features = ["signed"]}
console_error_panic_hook = "0.1.7"
console_log = "1.0.0"

[[workspace.metadata.leptos]]
name = "ssins"
# the package in the workspace that contains the server binary (binary crate)
bin-package = "ssins-webserver"
# the package in the workspace that contains the frontend wasm binary (library crate)
lib-package = "ssins-bind"


# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"

# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
# assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = []

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = []

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false